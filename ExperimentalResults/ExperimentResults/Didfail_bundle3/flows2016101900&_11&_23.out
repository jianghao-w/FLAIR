Changed: 25
Changed: 0
---- Flows with 0 intent(s) ---------------------------------
[Flow(src=StaticField(field='<a.a.a.d.a: java.util.Set b>'), app='be.ppareit.shutdown', sink=StaticField(field='<a.a.a.c.c: a.a.a.c.c g>')),
 Flow(src=StaticField(field='<a.a.a.d.a: java.util.Set b>'), app='be.ppareit.shutdown', sink=StaticField(field='<a.a.a.c.c: a.a.a.c.c h>')),
 Flow(src=StaticField(field='<a.a.a.d.a: java.util.ArrayList c>'), app='be.ppareit.shutdown', sink=StaticField(field='<a.a.a.d.a: java.util.ArrayList c>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus AutoNight>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus ForceNight>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus Off>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus Auto>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Error>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Stopped>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Running>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.hardware.SensorEvent)', app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src='Src: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>', app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src='Src: Stmt($z0 := @parameter1: boolean)', app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src='Src: Stmt($r2 := @parameter1: java.lang.Object)', app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src='Src: Stmt($i0 := @parameter1: int)', app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.widget.SeekBar)', app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus Auto>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus AutoNight>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus ForceNight>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Error>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Running>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Stopped>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus Off>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='biz.gyrus.yaab', sink='Sink: <android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus Auto>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus[] $VALUES>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus AutoNight>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus[] $VALUES>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus ForceNight>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus[] $VALUES>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus Off>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus[] $VALUES>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Error>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus[] $VALUES>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Running>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus[] $VALUES>')),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Stopped>'), app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus[] $VALUES>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.hardware.SensorEvent)', app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>')),
 Flow(src='Src: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>', app='biz.gyrus.yaab', sink=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.Context)', app='biz.gyrus.yaab', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.hardware.SensorEvent)', app='biz.gyrus.yaab', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>'),
 Flow(src='Src: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>', app='biz.gyrus.yaab', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='biz.gyrus.yaab', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>'),
 Flow(src='Src: Stmt($r2 := @parameter1: java.lang.Object)', app='biz.gyrus.yaab', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='biz.gyrus.yaab', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>'),
 Flow(src='Src: Stmt($z0 := @parameter1: boolean)', app='biz.gyrus.yaab', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.Globals: int MIN_NM_BRIGHTNESS>'), app='biz.gyrus.yaab', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.Globals: int MIN_NM_THRESHOLD>'), app='biz.gyrus.yaab', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.hardware.SensorEvent)', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: Stmt($r2 := @parameter1: java.lang.Object)', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: Stmt($i0 := @parameter1: int)', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus Auto>'), app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus AutoNight>'), app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus ForceNight>'), app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Error>'), app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Running>'), app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$ServiceStatus: biz.gyrus.yaab.BrightnessController$ServiceStatus Stopped>'), app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController: biz.gyrus.yaab.BrightnessController _instance>'), app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.LightMonitorService: biz.gyrus.yaab.LightMonitorService _instance>'), app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<biz.gyrus.yaab.BrightnessController$BrightnessStatus: biz.gyrus.yaab.BrightnessController$BrightnessStatus Off>'), app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.os.Bundle: java.lang.Object get(java.lang.String)>', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)>', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.os.Bundle: java.lang.Object get(java.lang.String)>', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)>', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src='Src: Stmt($z0 := @parameter1: boolean)', app='biz.gyrus.yaab', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.hardware.SensorEvent)', app='biz.gyrus.yaab', sink='Sink: <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>'),
 Flow(src='Src: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>', app='biz.gyrus.yaab', sink='Sink: <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.Context)', app='biz.gyrus.yaab', sink='Sink: <android.content.Context: android.content.ComponentName startService(android.content.Intent)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='biz.gyrus.yaab', sink='Sink: <android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>'),
 Flow(src='Src: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)>', app='biz.gyrus.yaab', sink='Sink: <android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.Global: boolean debugEnabled>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.Global: boolean debugEnabled>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.lang.String textToBeAdded>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.lang.String textToBeAdded>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: int textfile_long_min>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: int textfile_long_min>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName[] $VALUES>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: boolean TRACE>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>')),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>'), app='de.k3b.android.toGoZip', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>'), app='de.k3b.android.toGoZip', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>'), app='de.k3b.android.toGoZip', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>'), app='de.k3b.android.toGoZip', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement UNKNOWN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>', app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>', app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.os.Bundle: java.lang.Object get(java.lang.String)>', app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.os.Bundle: java.lang.String getString(java.lang.String)>', app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement UNKNOWN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement UNKNOWN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement UNKNOWN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement UNKNOWN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement UNKNOWN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement UNKNOWN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement UNKNOWN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.Global: boolean debugEnabled>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: int textfile_long_min>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement UNKNOWN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel DEBUG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel INFO>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel NATIVE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel SUPPRESS>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel VERBOSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel WARN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName CALLER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName COMPACT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName LONG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName SHORT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.CallerStackTrace: java.lang.StackTraceElement UNKNOWN>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogAdapter: java.util.concurrent.ConcurrentMap nativeLevelMap>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig$ShowName: eu.lp0.slf4j.android.LoggerConfig$ShowName FALSE>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.zip.CompressJob: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.zip.ZipLogImpl: org.slf4j.Logger logger>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LogLevel: eu.lp0.slf4j.android.LogLevel ERROR>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerConfig: eu.lp0.slf4j.android.LoggerConfig DEFAULT>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<eu.lp0.slf4j.android.LoggerFactory: org.slf4j.Logger LOG>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY>'), app='de.k3b.android.toGoZip', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>'), app='de.k3b.android.toGoZip', sink='Sink: <java.io.OutputStream: void write(byte[],int,int)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>'), app='de.k3b.android.toGoZip', sink='Sink: <java.io.OutputStream: void write(byte[],int,int)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>'), app='de.k3b.android.toGoZip', sink='Sink: <java.io.OutputStream: void write(byte[],int,int)>'),
 Flow(src=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>'), app='de.k3b.android.toGoZip', sink='Sink: <java.io.OutputStream: void write(byte[],int,int)>'),
 Flow(src=StaticField(field='<fr.xgouchet.androidlib.R$layout: int item_file>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>')),
 Flow(src='Src: <android.os.Bundle: int getInt(java.lang.String,int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>')),
 Flow(src=StaticField(field='<android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>')),
 Flow(src=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Style: de.neofonie.mobile.app.android.widget.crouton.Style CONFIRM>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>')),
 Flow(src=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Style: de.neofonie.mobile.app.android.widget.crouton.Style INFO>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>')),
 Flow(src=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Style: de.neofonie.mobile.app.android.widget.crouton.Style ALERT>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>')),
 Flow(src=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean USE_HOME_PAGE>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>')),
 Flow(src=StaticField(field='<android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Style: de.neofonie.mobile.app.android.widget.crouton.Style ALERT>')),
 Flow(src=StaticField(field='<android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Style: de.neofonie.mobile.app.android.widget.crouton.Style CONFIRM>')),
 Flow(src=StaticField(field='<android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Style: de.neofonie.mobile.app.android.widget.crouton.Style INFO>')),
 Flow(src=StaticField(field='<fr.xgouchet.androidlib.data.FileUtils: java.io.File STORAGE>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.androidlib.data.FileUtils: java.lang.String DOWNLOAD_FOLDER>')),
 Flow(src=StaticField(field='<java.io.File: java.lang.String separator>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.androidlib.data.FileUtils: java.lang.String DOWNLOAD_FOLDER>')),
 Flow(src=StaticField(field='<fr.xgouchet.androidlib.data.FileUtils: java.io.File STORAGE>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.androidlib.data.FileUtils: java.lang.String STORAGE_PATH>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean AUTO_SAVE_OVERWRITE>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean AUTO_SAVE_OVERWRITE>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean BACK_BTN_AS_UNDO>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean BACK_BTN_AS_UNDO>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean FLING_TO_SCROLL>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean FLING_TO_SCROLL>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean FORCE_AUTO_SAVE>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean FORCE_AUTO_SAVE>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean SEARCHMATCHCASE>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean SEARCHMATCHCASE>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean SEARCHWRAP>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean SEARCHWRAP>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean SHOW_LINE_NUMBERS>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean SHOW_LINE_NUMBERS>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean UNDO>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean UNDO>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean USE_HOME_PAGE>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean USE_HOME_PAGE>')),
 Flow(src=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean USE_HOME_PAGE>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean USE_HOME_PAGE>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean WORDWRAP>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean WORDWRAP>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int COLOR>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int COLOR>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int DEFAULT_END_OF_LINE>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int DEFAULT_END_OF_LINE>')),
 Flow(src=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int DEFAULT_END_OF_LINE>'), app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int END_OF_LINE>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int END_OF_LINE>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int END_OF_LINE>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int MAX_RECENT_FILES>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int MAX_RECENT_FILES>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int TEXT_SIZE>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int TEXT_SIZE>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int UNDO_MAX_STACK>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: int UNDO_MAX_STACK>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: java.lang.String ENCODING>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: java.lang.String ENCODING>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: java.lang.String HOME_PAGE_PATH>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: java.lang.String HOME_PAGE_PATH>')),
 Flow(src='Src: <android.os.Bundle: java.lang.String getString(java.lang.String)>', app='fr.xgouchet.texteditor', sink=StaticField(field='<fr.xgouchet.texteditor.common.Settings: java.lang.String HOME_PAGE_PATH>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<fr.xgouchet.texteditor.common.Settings: java.lang.String HOME_PAGE_PATH>'), app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.os.Bundle: java.lang.String getString(java.lang.String)>', app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean USE_HOME_PAGE>'), app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>'),
 Flow(src=StaticField(field='<fr.xgouchet.androidlib.R$layout: int item_file>'), app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>'),
 Flow(src='Src: <android.os.Bundle: int getInt(java.lang.String,int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>'),
 Flow(src=StaticField(field='<fr.xgouchet.androidlib.R$layout: int item_file>'), app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.os.Bundle: int getInt(java.lang.String,int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<fr.xgouchet.texteditor.common.RecentFiles: java.util.ArrayList PATHS>'), app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<java.io.File: java.lang.String pathSeparator>'), app='fr.xgouchet.texteditor', sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<fr.xgouchet.androidlib.data.FileUtils: java.io.File STORAGE>'), app='fr.xgouchet.texteditor', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src='Src: <android.os.Bundle: java.lang.String getString(java.lang.String)>', app='fr.xgouchet.texteditor', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=StaticField(field='<fr.xgouchet.androidlib.R$layout: int item_file>'), app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src='Src: <android.os.Bundle: int getInt(java.lang.String,int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>'), app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src=StaticField(field='<android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>'), app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Style: de.neofonie.mobile.app.android.widget.crouton.Style CONFIRM>'), app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Style: de.neofonie.mobile.app.android.widget.crouton.Style INFO>'), app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src='Src: <android.os.Handler: android.os.Message obtainMessage(int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Style: de.neofonie.mobile.app.android.widget.crouton.Style ALERT>'), app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src=StaticField(field='<fr.xgouchet.texteditor.common.Settings: boolean USE_HOME_PAGE>'), app='fr.xgouchet.texteditor', sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app='fr.xgouchet.texteditor', sink='Sink: <java.io.FileOutputStream: void write(byte[])>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink='Sink: <java.io.FileOutputStream: void write(byte[])>'),
 Flow(src=StaticField(field='<fr.xgouchet.androidlib.R$layout: int item_file>'), app='fr.xgouchet.texteditor', sink='Sink: <android.content.Intent: android.content.Intent setAction(java.lang.String)>'),
 Flow(src='Src: <android.os.Bundle: int getInt(java.lang.String,int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.content.Intent: android.content.Intent setAction(java.lang.String)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.Context)', app='fr.xgouchet.texteditor', sink='Sink: <android.content.Intent: android.content.Intent setAction(java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='fr.xgouchet.texteditor', sink='Sink: <android.content.Intent: android.content.Intent setAction(java.lang.String)>'),
 Flow(src='Src: <java.util.Locale: java.lang.String getCountry()>', app='org.zeitgeist.movement', sink=StaticField(field='<org.zeitgeist.movement.App: android.content.Context mContext>')),
 Flow(src='Src: <java.util.Locale: java.lang.String getCountry()>', app='org.zeitgeist.movement', sink=StaticField(field='<org.zeitgeist.movement.App: android.content.res.Resources mResources>')),
 Flow(src='Src: <android.os.Bundle: long getLong(java.lang.String,long)>', app='org.zeitgeist.movement', sink=StaticField(field='<org.zeitgeist.movement.BaseActivity: long mBkgTimeStamp>')),
 Flow(src='Src: Stmt($r1 := @parameter0: android.os.Bundle)', app='org.zeitgeist.movement', sink=StaticField(field='<org.zeitgeist.movement.BaseActivity: long mBkgTimeStamp>')),
 Flow(src=StaticField(field='<org.zeitgeist.movement.FinalGalleryImageView: int mIndex>'), app='org.zeitgeist.movement', sink=StaticField(field='<org.zeitgeist.movement.FinalGalleryImageView: int mIndex>')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='org.zeitgeist.movement', sink=StaticField(field='<org.zeitgeist.movement.FinalGalleryImageView: int mIndex>')),
 Flow(src=StaticField(field='<org.zeitgeist.movement.FinalGalleryImageView: int mIndex>'), app='org.zeitgeist.movement', sink='Sink: <java.net.URL: void <init>(java.lang.String)>'),
 Flow(src=StaticField(field='<org.zeitgeist.movement.App: java.lang.String mVersionNameOfApp>'), app='org.zeitgeist.movement', sink='Sink: <java.net.URL: void <init>(java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='org.zeitgeist.movement', sink='Sink: <java.net.URL: void <init>(java.lang.String)>'),
 Flow(src=StaticField(field='<org.zeitgeist.movement.FinalGalleryView1: android.graphics.BitmapFactory$Options mBmpOptions>'), app='org.zeitgeist.movement', sink='Sink: <java.net.URL: void <init>(java.lang.String)>'),
 Flow(src='Src: Stmt($i0 := @parameter1: int)', app='org.zeitgeist.movement', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src='Src: Stmt($i1 := @parameter2: int)', app='org.zeitgeist.movement', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.zeitgeist.movement.FinalGalleryImageView: int mIndex>'), app='org.zeitgeist.movement', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.zeitgeist.movement.App: java.lang.String mVersionNameOfApp>'), app='org.zeitgeist.movement', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='org.zeitgeist.movement', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.zeitgeist.movement.FinalGalleryView1: android.graphics.BitmapFactory$Options mBmpOptions>'), app='org.zeitgeist.movement', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <java.net.URL: java.net.URLConnection openConnection()>', app='org.zeitgeist.movement', sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app='org.zeitgeist.movement', sink='Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.zeitgeist.movement.App: int mVersionCodeOfApp>'), app='org.zeitgeist.movement', sink='Sink: <android.util.Log: int w(java.lang.String,java.lang.String)>'),
 Flow(src=StaticField(field='<org.zeitgeist.movement.BaseActivity: long mBkgTimeStamp>'), app='org.zeitgeist.movement', sink='Sink: <android.os.Bundle: void putLong(java.lang.String,long)>'),
 Flow(src='Src: <android.os.Bundle: long getLong(java.lang.String,long)>', app='org.zeitgeist.movement', sink='Sink: <android.os.Bundle: void putLong(java.lang.String,long)>'),
 Flow(src='Src: Stmt($r1 := @parameter0: android.os.Bundle)', app='org.zeitgeist.movement', sink='Sink: <android.os.Bundle: void putLong(java.lang.String,long)>')]
---- Flows with 1 intent(s) ---------------------------------
[Flow(src=IntentResult(i=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_6')), app=None, sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=IntentResult(i=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_11')), app=None, sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=IntentResult(i=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_10')), app=None, sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=IntentResult(i=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_6')), app=None, sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=IntentResult(i=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_11')), app=None, sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=IntentResult(i=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_10')), app=None, sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app=None, sink=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_10')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app=None, sink=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_11')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app=None, sink=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_6')),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'), app=None, sink=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.io.File[] filesToBeAdded>')),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'), app=None, sink=StaticField(field='<de.k3b.android.toGoZip.SettingsActivity: java.lang.String textToBeAdded>')),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'), app=None, sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_long>')),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'), app=None, sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String textfile_short>')),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'), app=None, sink=StaticField(field='<de.k3b.android.toGoZip.SettingsImpl: java.lang.String zipfile>')),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'), app=None, sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'), app=None, sink='Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>'),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'), app=None, sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>'),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'), app=None, sink='Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>'),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'), app=None, sink='Sink: <java.io.OutputStream: void write(byte[],int,int)>'),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'), app=None, sink=StaticField(field='<de.neofonie.mobile.app.android.widget.crouton.Manager: de.neofonie.mobile.app.android.widget.crouton.Manager INSTANCE>')),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'), app=None, sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>'),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'), app=None, sink='Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>'),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'), app=None, sink='Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>'),
 Flow(src=StaticField(field='<fr.xgouchet.androidlib.R$layout: int item_file>'), app=None, sink=IntentResult(i=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'))),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app=None, sink=IntentResult(i=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'))),
 Flow(src=StaticField(field='<fr.xgouchet.texteditor.common.RecentFiles: java.util.ArrayList PATHS>'), app=None, sink=IntentResult(i=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'))),
 Flow(src='Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)', app=None, sink=IntentResult(i=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'))),
 Flow(src='Src: <android.os.Bundle: java.lang.String getString(java.lang.String)>', app=None, sink=IntentResult(i=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'))),
 Flow(src=StaticField(field='<java.io.File: java.lang.String separator>'), app=None, sink=IntentResult(i=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'))),
 Flow(src='Src: <android.os.Bundle: int getInt(java.lang.String,int)>', app=None, sink=IntentResult(i=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'))),
 Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'), app=None, sink='Sink: <android.content.Intent: android.content.Intent setAction(java.lang.String)>'),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app=None, sink=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2')),
 Flow(src='Src: <android.app.Activity: android.view.View findViewById(int)>', app=None, sink=Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2'))]
---- Flows with 2 intent(s) ---------------------------------
[Flow(src=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'), app=None, sink=IntentResult(i=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2')))]
--------------------------------------------------------------
--------------------------------------------------------------
--------------------
### 'Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2')': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_6')': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_10')': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_11')': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Intent(tx=('org.zeitgeist.movement', None), rx=('de.k3b.android.toGoZip', None), intent_id='newField_2')': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>']
--------------------
### 'IntentResult(i=Intent(tx=('org.zeitgeist.movement', None), rx=('fr.xgouchet.texteditor', None), intent_id='newField_2'))': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>',
 'Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)',
 'Src: <android.os.Bundle: java.lang.String getString(java.lang.String)>',
 'Src: <android.os.Bundle: int getInt(java.lang.String,int)>']
### 'IntentResult(i=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_11'))': ###
[]
### 'IntentResult(i=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_10'))': ###
[]
### 'IntentResult(i=Intent(tx=('biz.gyrus.yaab', None), rx=('biz.gyrus.yaab', None), intent_id='newField_6'))': ###
[]
--------------------
### 'Sink: <android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>',
 'Src: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)>']
### 'Sink: <java.io.OutputStream: void write(byte[],int,int)>': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Sink: <android.util.Log: int e(java.lang.String,java.lang.String)>': ###
['Src: <android.os.Bundle: java.lang.Object get(java.lang.String)>',
 'Src: <android.app.Activity: android.view.View findViewById(int)>',
 'Src: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)>',
 'Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)',
 'Src: Stmt($i0 := @parameter1: int)',
 'Src: Stmt($i1 := @parameter2: int)',
 'Src: <java.net.URL: java.net.URLConnection openConnection()>']
### 'Sink: <android.os.Bundle: void putLong(java.lang.String,long)>': ###
['Src: <android.os.Bundle: long getLong(java.lang.String,long)>',
 'Src: Stmt($r1 := @parameter0: android.os.Bundle)']
### 'Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>': ###
['Src: Stmt($r1 := @parameter0: android.content.Context)',
 'Src: Stmt($r1 := @parameter0: android.hardware.SensorEvent)',
 'Src: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>',
 'Src: <android.app.Activity: android.view.View findViewById(int)>',
 'Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)']
### 'Sink: <android.os.Handler: boolean sendMessage(android.os.Message)>': ###
['Src: <android.os.Bundle: int getInt(java.lang.String,int)>',
 'Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)',
 'Src: <android.os.Handler: android.os.Message obtainMessage(int)>',
 'Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Sink: <java.net.URL: void <init>(java.lang.String)>': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Sink: <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>': ###
['Src: Stmt($r1 := @parameter0: android.hardware.SensorEvent)',
 'Src: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>']
### 'Sink: <android.util.Log: int v(java.lang.String,java.lang.String)>': ###
['Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)',
 'Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Sink: <android.util.Log: int i(java.lang.String,java.lang.String)>': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>',
 'Src: Stmt($z0 := @parameter1: boolean)']
### 'Sink: <android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Sink: <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>': ###
['Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>': ###
['Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)',
 'Src: <android.app.Activity: android.view.View findViewById(int)>',
 'Src: <android.os.Bundle: java.lang.String getString(java.lang.String)>',
 'Src: <android.os.Bundle: int getInt(java.lang.String,int)>']
### 'Sink: <android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>': ###
['Src: Stmt($r2 := @parameter1: java.lang.Object)',
 'Src: <android.app.Activity: android.view.View findViewById(int)>',
 'Src: Stmt($z0 := @parameter1: boolean)',
 'Src: <android.os.Bundle: int getInt(java.lang.String,int)>']
### 'Sink: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>': ###
['Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)',
 'Src: <android.app.Activity: android.view.View findViewById(int)>',
 'Src: <android.os.Bundle: java.lang.String getString(java.lang.String)>']
### 'Sink: <java.io.FileOutputStream: void write(byte[])>': ###
['Src: Stmt($r1 := @parameter0: android.content.SharedPreferences)',
 'Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Sink: <android.content.Intent: android.content.Intent setAction(java.lang.String)>': ###
['Src: <android.os.Bundle: int getInt(java.lang.String,int)>',
 'Src: Stmt($r1 := @parameter0: android.content.Context)',
 'Src: <android.app.Activity: android.view.View findViewById(int)>']
### 'Sink: <android.content.Context: android.content.ComponentName startService(android.content.Intent)>': ###
['Src: Stmt($r1 := @parameter0: android.content.Context)']
### 'Sink: <android.util.Log: int d(java.lang.String,java.lang.String)>': ###
['Src: Stmt($r1 := @parameter0: android.hardware.SensorEvent)',
 'Src: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>',
 'Src: Stmt($r2 := @parameter1: java.lang.Object)',
 'Src: Stmt($i0 := @parameter1: int)',
 'Src: <android.os.Bundle: java.lang.Object get(java.lang.String)>',
 'Src: <android.app.Activity: android.view.View findViewById(int)>',
 'Src: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)>',
 'Src: <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>',
 'Src: <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>',
 'Src: <android.os.Bundle: java.lang.String getString(java.lang.String)>',
 'Src: Stmt($z0 := @parameter1: boolean)',
 'Src: Stmt($r1 := @parameter0: android.widget.SeekBar)']
--------------------
total running time 313 seconds
